{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    "target": "ESNext",                                  /*in which flavor of javascript typescript will get compiled to*/
    "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "module": "commonjs", /*NodeNext if you set "type":"module" in package.json for using import instead of require*/                               /* Specify what module code is generated. */
    //"moduleResolution": "Node","Clasic","NodeNext"    /*how typescript will find code that you import
    "rootDir": "./",                                  /* Specify the root folder within your source files. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "outDir": "dist",                                   /*where js code will be compiled*/
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "sourceMap": true,
    "moduleResolution": "Node",                         /* maps compiled js back to ts helps us out in debuging*/
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                   /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    // "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    "skipLibCheck": true ,                               /* Skip type checking all .d.ts files. */
    "allowJs":true ,
    "experimentalDecorators": true, 
    "emitDecoratorMetadata": true,                                
  },
  "include": [
    "src",
    "package.json"
    ] ,       
  "exclude": [
    "src/**/*.spec.ts" //in src at any level exclude any file that ands with spec.ts 
  ]
    }

